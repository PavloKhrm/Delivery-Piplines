{{- $es := (.Values.elasticsearch | default (dict "enabled" false "image" "" "port" 9200 "javaOpts" "-Xms256m -Xmx256m")) }}
{{- if $es.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-es01
spec:
  clusterIP: None
  ports:
    - name: http
      port: {{ $es.port }}
      targetPort: {{ $es.port }}
  selector:
    app: {{ .Release.Name }}-es01
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-es01
spec:
  serviceName: {{ .Release.Name }}-es01
  replicas: {{ if .Values.suspended }}0{{ else }}1{{ end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-es01
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-es01
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: es-config
          configMap:
            name: {{ .Release.Name }}-es-config
      containers:
        - name: es01
          image: {{ $es.image }}
          ports:
            - containerPort: {{ $es.port }}
          env:
            - name: ES_JAVA_OPTS
              value: "{{ $es.javaOpts }}"
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: ELASTIC_PASSWORD
          args: []
          resources:
{{- toYaml .Values.resources.es01 | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
            - name: es-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.storageClassName }}
        storageClassName: {{ .Values.storageClassName | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.es01.size }}
{{- end }}