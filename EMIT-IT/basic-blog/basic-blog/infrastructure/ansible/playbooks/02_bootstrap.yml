---
- hosts: all
  vars:
    KUBECONFIG_LOCAL: kubeconfig_{{ inventory_hostname | default('localhost') }}.yaml
    # Default is hetzner; override with --extra-vars "mode=local"
    mode: "hetzner"

  tasks:
    # -------------------------------
    # Helm repos
    # -------------------------------
    - name: Add Traefik Helm repo
      local_action: command helm repo add traefik https://traefik.github.io/charts
      ignore_errors: true

    - name: Add Jetstack Helm repo
      local_action: command helm repo add jetstack https://charts.jetstack.io
      ignore_errors: true

    - name: Add Hetzner Helm repo (only in Hetzner mode)
      local_action: command helm repo add hcloud https://charts.hetzner.cloud
      when: mode == "hetzner"
      ignore_errors: true

    - name: Update Helm repos
      local_action: command helm repo update

    # -------------------------------
    # Traefik Ingress Controller
    # -------------------------------
    - name: Install Traefik via Helm
      local_action:
        module: shell
        cmd: >
          helm upgrade --install traefik traefik/traefik
          --kubeconfig {{ KUBECONFIG_LOCAL }}
          -n kube-system --create-namespace
          --set ingressRoute.dashboard.enabled=true
          --set ports.websecure.tls.enabled=true
          --set service.type=NodePort
          --set ingressClass.enabled=true
          --set ingressClass.isDefaultClass=true

    # -------------------------------
    # cert-manager
    # -------------------------------
    - name: Install cert-manager CRDs
      local_action:
        module: shell
        cmd: >
          kubectl --kubeconfig {{ KUBECONFIG_LOCAL }}
          apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.crds.yaml

    - name: Install cert-manager via Helm
      local_action:
        module: shell
        cmd: >
          helm upgrade --install cert-manager jetstack/cert-manager
          --kubeconfig {{ KUBECONFIG_LOCAL }}
          -n cert-manager --create-namespace
          --version v1.14.4
          --set installCRDs=false

    - apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: selfsigned-issuer
      spec:
        selfSigned: { }

    # -------------------------------
    # ClusterIssuer (skip in local mode)
    # -------------------------------
    - name: Create ClusterIssuer (Letâ€™s Encrypt)
      kubernetes.core.k8s:
        kubeconfig: "{{ KUBECONFIG_LOCAL }}"
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              email: "{{ email_lets_encrypt }}"
              server: https://acme-v02.api.letsencrypt.org/directory
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
                - http01:
                    ingress:
                      class: traefik
      when: mode == "hetzner"

    # -------------------------------
    # Hetzner CSI (only in Hetzner mode)
    # -------------------------------
    - name: Install Hetzner CSI
      local_action:
        module: shell
        cmd: >
          helm upgrade --install hcloud-csi hcloud/hcloud-csi
          --kubeconfig {{ KUBECONFIG_LOCAL }}
          -n kube-system --create-namespace
          --set secret.token={{ lookup('env', 'HCLOUD_TOKEN') }}
      when: mode == "hetzner"

    # -------------------------------
    # Client Namespace
    # -------------------------------
    - name: Ensure client namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ KUBECONFIG_LOCAL }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ client_namespace }}"
